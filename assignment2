{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "enter the word wich you want to reverse:hello world\n",
      "dlrow olleh\n"
     ]
    }
   ],
   "source": [
    "def reverse_string(s):\n",
    "    txt = s[::-1]\n",
    "    print(txt)\n",
    "def main():\n",
    "    s = input(\"enter the word wich you want to reverse:\")\n",
    "    reverse_string(s)\n",
    "if __name__ == \"__main__\":\n",
    "    main()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter max star to be display on single line 8\n",
      "enter an odd numner\n",
      "try again?(y/n) : y\n",
      "Enter max star to be display on single line 9\n",
      "* \n",
      "* * \n",
      "* * * \n",
      "* * * * \n",
      "* * * * * \n",
      "* * * * \n",
      "* * * \n",
      "* * \n",
      "* \n",
      "\n",
      "try again?(y/n) : n\n"
     ]
    }
   ],
   "source": [
    " def printer_mod(rows):\n",
    "    p = int(((rows+1)/2))\n",
    "    for i in range(0, p):\n",
    "        for j in range(0, i+1):\n",
    "            print(\"*\", end=' ')\n",
    "        print(\"\\r\")\n",
    "    for i in range(p, 0, -1):\n",
    "        for j in range(0, i - 1):\n",
    "            print(\"*\", end=' ')\n",
    "        print(\"\\r\")\n",
    "        \n",
    "    \n",
    "def main():\n",
    "    again =\"y\"\n",
    "    while again.lower()==\"y\":\n",
    "        rows = int(input(\"Enter max star to be display on single line \"))\n",
    "        if  rows%2!= 0:\n",
    "            printer_mod(rows)\n",
    "        else :\n",
    "            print(\"enter an odd numner\")  \n",
    "        again = input(\"try again?(y/n) : \")\n",
    "    \n",
    "if __name__ == \"__main__\":\n",
    "    main()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
